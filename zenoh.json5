{
  plugins: {
    // Configuration of "storage_manager" plugin:
    storage_manager: {
      volumes: {
        s3: {
            // Endpoint where the S3 server is located
            url: "http://localhost:9000",

            private: {
                // Credentials for interacting with the S3 volume. They may differ from the storage credentials.
                access_key: "AKIAIOSFODNN7EXAMPLE",
                secret_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            }
        }
      },
      storages: {
        // Configuration of a "demo" storage using the S3 volume. Each storage is associated to a
        // single S3 bucket.
        s3_storage: {

          // The key expression this storage will subscribes to
          key_expr: "s3/example/*",

          // this prefix will be stripped from the received key when converting to database key.
          // i.e.: "demo/example/a/b" will be stored as "a/b"
          strip_prefix: "s3/example",

          volume: {
            // Id of the volume this storage is associated to
            id: "s3",

            // Bucket to which this storage is associated to
            bucket: "zenoh-bucket",

            // If the bucket doesn't exist, create it
            create_bucket: true,

            // AWS region to which connect
            region: "eu-west-3",

            // strategy on storage closure, either `destroy_bucket` or `do_nothing`
            // adminspace.permissions.write needs to be set to true to destroy the bucket on closure
            on_closure: "destroy_bucket",

            private: {
                // Credentials for interacting with the S3 bucket
                access_key: "AKIAIOSFODNN7EXAMPLE",
                secret_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY",
            }
          }
        },
      }
    },
    // Optionally, add the REST plugin
    rest: { http_port: 8000 }
  },
  adminspace: {
    // read and/or write permissions on the admin space
    permissions: {
      read: true,
      write: true,
    },
  },
}
